/*
1. Дан код: Почему код даёт именно такие результаты?
var a = 1, b = 1, c, d;
c = ++a; alert(c);              // 2    Инкремент "++""  увеличивает  переменную на 1  и показывает ее сразу 


d = b++; alert(d);              // 1    В случае применения постфиксной формы инкремента происходит сначала вывод значения переменной (операнда), 
                                        //а затем ее увеличение на единицу с дальнейшим применением в коде. 
                                        //Если повторить d = b++; alert(d); то значение уже будет ровняться 2

c = (2+ ++a); alert(c);         // 5    c = (2 + (1+2))в данном случае а уже = 2 берется из 1 выражения (с = ++а) отсюда следует 2 + 3 = 5

d = (2+ b++); alert(d);        // 4     Здесь b++ увеличится на 1 тоесть будет равно 2, (2 + (2)) = 4

alert(a);                      // 3     В выражениях, приведенных в условии: с = ++a; и c = (2 + ++a); - переменная "а" увеличилась пошагово 
                                        //(путем двухкратного применения префиксных инкрементов) с первоначального значения "1" до значения "2" и,затем, до значения "3". 
                                        //Поэтому при выводе в последнем выражении отображается значение "3".

alert(b);                      // 3     То же самое произошло с переменной "b" в двух предшествующих выражениях: d = b++; и d = (2 + b++); - ,
                                        // но только с применением постфиксных инкрементов, что привело к увеличению ее значения до "3".
*/                                       

/*
2. Чему будет равен x в примере ниже?
var a = 2;
var x = 1 + (a *= 2);   // x = 1 + (a = 2*2) = 5
*/


/*
3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:

-если a и b положительные, вывести их разность;
-если а и b отрицательные, вывести их произведение;
-если а и b разных знаков, вывести их сумму; 
*ноль можно считать положительным числом.

let a = +prompt('Введите значение переменной a:');
let b = +prompt('Введите значение переменной b:');
    

    if (a >= 0 && b >= 0) {
        console.log("Разность = " + (a - b));
    }

    if (a < 0 && b < 0) {
        console.log("Произведение = " + (a * b));
    }

    if ((a >= 0 && b < 0) || (a < 0 && b >= 0)) {
        console.log("Сумма = " + (a + b));
    }
    */

    /*
    4. Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
        var a = +prompt('Введите число в промежутке от 0 до 15');
   switch (a) {
    case 0:
        console.log(a++);
    case 1:
        console.log(a++);
    case 2:
        console.log(a++);
    case 3:
        console.log(a++);
    case 4:
        console.log(a++);
    case 5:
        console.log(a++);
    case 6:
        console.log(a++);
    case 7:
        console.log(a++);
    case 8:
        console.log(a++);
    case 9:
        console.log(a++);
    case 10:
        console.log(a++);
    case 11:
        console.log(a++);
    case 12:
        console.log(a++);
    case 13:
        console.log(a++);
    case 14:
        console.log(a++);
    case 15:
        console.log(a++);
   }
   */

   /* 5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.
   
   function summ(a, b) {
   return a + b;
}

function division(a, b) {
    return a / b;
}

function subtraction(a, b) {
    return a - b;
}

function multiplic(a, b) {
    return a * b;
}
*/

/*Реализовать функцию с тремя параметрами:
  function mathOperation(arg1, arg2, operation), 
  где arg1, arg2 – значения аргументов, operation – строка с названием операции.
  В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) 
  и вернуть полученное значение (использовать switch).
  */

  /*function mathOperation(arg1, arg2, operation) {
        switch (operation) {
        case "summ":
            result = summ(arg1, arg2);
        case "division":
            result = division(arg1, arg2);
        case "subtraction":
            result = subtraction(arg1, arg2);
        case "multiplication":
            result = multiplication(arg1, arg2);
        }
    return result;
}
*/

// 7.	* Сравнить null и 0. Попробуйте объяснить результат.
// null указывает на отсутсвие вообще какого-либо значения 
//а 0 это уже конкретное значение.

//8. С помощью рекурсии организовать функцию возведения числа в степень. 
//Формат: function power(val, pow), где val – заданное число, pow – степень.
function power(val, pow) {
    if (pow > 0) {
        return val * power(val, pow - 1);
    } else if (pow < 0) {
        return val * power(val, pow + 1);
    } else
        return 1;
}

console.log("2^4 = " + power(2, 4));